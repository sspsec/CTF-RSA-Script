import binascii, gmpy2
from functools import reduce

import libnum


def CRT(mi, ai):
    assert (reduce(gmpy2.gcd, mi) == 1)
    assert (isinstance(mi, list) and isinstance(ai, list))
    M = reduce(lambda x, y: x * y, mi)
    ai_ti_Mi = [a * (M // m) * gmpy2.invert(M // m, m) for (m, a) in zip(mi, ai)]
    return reduce(lambda x, y: x + y, ai_ti_Mi) % M


e = 23
n = [
    13800463029492313143419573916876970136103120827887302805582698594611021278445457887575191799406357130878681416945659342081219864279810502110827801095061491479581001447401745018388032745918184317760066773261314541151463089141849797763861895040051338146116107418691857840233053409058756970237006788198412578921246642167420018662386392172505563750119608876043230572222863363214841773147003705241950847498123115415200037023588607227715724963429169002278319835533116404620827743831087048318018701102648032693814997477897841369617159402582429615482623026851531594756170634524466591100145869378306350208257865835029681626659,
    22522585537914560877136100481040224045957551302337992228577081139782515277962158242866730117722642439942357302891228986767510374712127525175323317978150004510084886282144231866418279396470410312812275200721040586861932970417808438127789562610502912476137369474044594530582892360375269697188720095337898933418633890503062707003803475741039699387034920207855160826004848277470166562492983990098756270500590419517299875132495284121895332556228835469362117694681217808629250740043404872781999122750856084949765694134664554777329240581877365152965930051059705233027572886278789284651153975228326918014733301055739346130139,
    8906243563692944291629310758655845150572136865422972523901014312524001928876391826862433251784551759494792390049272767727328839414103330070165252267436229840314197036124374436320890042540975600236323990443334662681085339471715964720868374797552086302668724934408798664133320594928484044071068557518898259931358787266855150754734710583075998897422206188036221272488262110092467463389326462573232233681024713080474747729898505374237363428187834685079861633597444351888296249938683786301762438186451869698395946493490527131187538733988157903658816360641543707184656094783301037159460177535314295237243618308180780057551,
    24489060006650148400844819407667148405542382045610683446908469926069466806899849642287835188092737548946092653063980150185733526590100744326821127992660784266121494034893919781982910397004164788962714828529552286768007895399333442385832633196360425303798056448348173042644816447049501507950148818246880127937167356165999124985530025219807857803836114393798640844536124849310155879400622137376772639047746452186717554905528015221285613839649766368287433133133898502145947599155576405489845552957577646618294301481400911097001707115414138048929320034561947624488128906854898835972797808160805912980434798840493680564479,
    16334937608900738482693706082023604286355636100608205404046250857708725511064670428519361683102120798844098299451442491174502988378212000958928309026663831582037169156540810521492782394219702038525221308707355394292458304772791661430014942087633976430155497063846076381740971079013264341480866328932699973478787400686567706331410852487308789438775495883834705615419032733623644142511277158249952832139747584227249668640498195370359061124992251007025729780727236091689928748924832745401312990999402936212321864599238707206768650788736626466675271248349432001464529231853196133335123138091417019610017135588280655627421,
    15763062502814573326430598814694215654681101119186674699255519481936280034450142798925412240585551138845785421397300359964562086244295026217539738417605961197008487099001269260844288134010139009719301268883530341322300854503788949108587753547694274938431863548225574461330343040053140981192615933401207690855169604637226487907998006507006956462608468789875914120046325641468007005422591578726445478100553815858302099523949930843087185319431309446615617733080101213387003740983334100812335680792158265204374625391682209591012639250004056924899941231698052868149184808866722668172132426477991042170398635779477662619497,
    14873276219997717957441938999620022434290443934759701931311027789146061209591701194028036974330040659555948388709205138822897097878375489376555634345233546547585208386944506847662016375484790387731393478097731721393046220251082181008194031759642311280475721359778629728994676725597736954724685805480603799522671344150432258289826480297036080323365090620409738073017285661686407943280628823009955923078788306603399852416513912497908138388049585775343672649677405899711724722220488431117367132163424253239055792516520755331256519354459553208379765416225488669486810428041432063303712324183637456673103731396689069386161]
c = [
    11288971462472374859701492602685577869531753179423748914594316807982158006777517544837069420949703473785311654136918571339566291326975613205265534201581351097265459215366248030053450288660735281714665090759664770094768497679439036620629530032367881904962040801087555733401965810920119303576045896100743755228460630104096476639133349296188117671268705342812521081650332960666215625968936722549616378215435917887674857606399173533387746249019876737266629110838600403478559657834366071068912531106125852020003671106528344489318024875115508047026634462172073389501119209086276026769275030842292151723342757264160478401907,
    8571555187703850282665210792398064933127788742638220701713923348193980145318250083840889427483314230589266502792260380764812598657123166677900827186286317657655568848108269410842838097506416463512186776055077179128322998498482824725680738697924180640783850193616932864394456453782384522484176239424269494432409207132512097317602923096172886889610023963876584452619211342935946318096534731994674942756293989804538641687159722378644954437861977911289520222783895948633298459689770776019491575068204235979874238070955624302752580738943376739757566749567846832588629116814559364758560831300153223189227622270037107190041,
    7451393608751798582212588178137891699019300922856930594278378806870635151531104824090464482131399418541691631036981054579108906724095932224224492638465163653815163446721647492445633693443115510934460121005684588810377691491944546247687453135622537991150841479256384013932321673352695532669589483631006069656161003822433796646521636010805922906115803124984785554113694528637119486941587536460043528168233720470952218255610126514012462131422979569924191147390252380112191750768056673843522506525633439922392361536897308093794834489584662980266351072906895825135018192183677265667334157529656952018651405136812751727151,
    15868550716701190324259636789899864822213346466109480780261726109363123013623530192830821785607088849024940592420325447763670538483088796466111383580516355987598084933124812442718243295524168703535672033467052621194623083993750308384061659996073586537252020143156864338121899326982041426664336126134200762955886935661471409363938169880414437809381829541865785602057181857051913222497812072031829509220937438805936832983504441818488810455154871226836118430128504412103754968004642014806574659547566834351457330962451811715189236852624155485063511536913283792166355454276820087568126892318334564449537897207706569108509,
    9651959419689122200682935412593518571672294307136729966248247968592954246894957649660971505695860748875579915712708636437014180712714766417799532546096847497929139782315765691217992447707791529153236201813957238804596198470643054895937314500006350930834217922504197491810608202490790886578682180136310659872959372036332451406844644420199232164306808173666559648862143244515232836422822143512123253830399397449726299919523480970737670239492317684816408267573796560973320281277087976038658069919253902631135920461886634238874601066062943106261425115351111946430719802809940590146513578265149590578448942354406167481501,
    6893918386304642353367253904344548726705223390148308150194179117909315664439148524213721435396883966051189830197258286415691816057659433584322360282394786421317906646990430447703840806317947708981997204910337186767946968350807464464807470882099977536403033450574244737383169799189235569630157348614645356116720740154402187549966921771072106450546896700363163934479448356888280537851981666870289449980977679923899092914203802219739109266343538397228638867995748829165864737700297080521522978494720272084907644948052911240319366042559596444802636422807281709580227908228647736721925209983654695702657525290259007439533,
    5785793379738340772368705916358972719991467378116881033443326568526471466702296528030718660139295079132559034496961014209002348058481326458398826824020511312314657114351497057152461005002443650488874071021807352723497021330976568895255393610074864845654736198626469367100776857620407916593531313866347374179236756539161549550456881262507519739883578485115471195475721069074245379189264731383016650964214687128905100209301577674613388753989997365682281373635542174142404208334828774483385329221565768941199282343318863611588613435684346307887908299218221672265014028235795898958845154942202119183285942792938609156687]

m = gmpy2.iroot(CRT(n, c), e)[0]
print(libnum.n2s(int(m)).decode())
